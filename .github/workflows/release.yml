name: Release Docker Image

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.2.3

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to Docker Hub

    env:
      # DockerHub login
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      # Proxy image
      IMAGE_NAME: "keboola/mcp-server"
      IMAGE_TAG: ${{ github.ref_name }} # Use the tag name as the image tag
      GCP_REGISTRY: "us-central1-docker.pkg.dev"
      GCP_REPOSITORY: "keboola-prod-artifacts/keboola/mcp-server"
      GCP_IDENTITY_PROVIDER: "projects/388088979044/locations/global/workloadIdentityPools/github/providers/github"
      GCP_SERVICE_ACCOUNT: "keboola-mcp-server-push@keboola-prod-artifacts.iam.gserviceaccount.com"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx # Assign an id to refer to outputs

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile # Explicitly specify the Dockerfile path
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64 # Example platforms, adjust if needed
          builder: ${{ steps.buildx.outputs.name }} # Use the Buildx builder instance 
      
      - id: 'gcpAuth'
        name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: ${{ env.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
          
      - name: Login to GCP GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.gcpAuth.outputs.access_token }}
    
      - name: Push image to GCP GAR
        shell: bash
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.GCP_REGISTRY }}/${{ env.GCP_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.GCP_REGISTRY }}/${{ env.GCP_REPOSITORY }}:${{ env.IMAGE_TAG }}
